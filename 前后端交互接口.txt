一、前后端数据交互

说明:以下请求全部为GET请求，因为meteor前端可以直接操作数据库，因此无须将数据POST到后端，直接在前端操作数据库即可。
     meteor的每一个页面除了其模板块，还有其helper(controler,控制其动态显示的数据)及events(前端事件控制，操作数据库在这里进行)
     给出一个meteor中文学习文档做参考(若看英文文档辛苦的话。。。。。。): http://zh.discovermeteor.com

1.首页
    url: '/'
    data: activity[]
    render: index.tpl.jade

2.首页(按类筛选活动)
    url: '/:typename'
    data: activity[](find by type)
    render: index.tpl.jade

3.登录页面
    url: '/login'
    data: none  //只需渲染相应登录页面即可
    render: login.tpl.jade

4.注册页面
    url: '/register'
    data: none //同login
    render: register.tpl.jade

4.活动详情页
    url: '/:activityId
    data: user, activity(find by Id)
    render: activity.tpl.jade

5.发布活动页
    url: '/createActivity'
    data: user
    render: createActivity.tpl.jade
 
6.活动详情页&评论
    url: '/profile'
    data: user, activity[](find by user)
    render: 'profile.tpl.jade'

二、meteor文件结构
    根目录共分client、lib、server、public四个文件夹
    其中client代码只在客户端（前端）运行,里面有css和templates文件夹，templates文件夹中存放各页面相关代码,每个页面有其jade和ls代码(helper和events)，存在一个文件夹
    server代码只在服务器（后端）运行
    lib代码在前后段都会运行,router代码在此文件夹,数据结构文件也在此文件夹
    public用于存放图片等公共资源

三、数据库schema
    1.user {
        id: objectId,
        username: string,
        password: string,
        email: string,
        profile: {
            nickname: string,
            photo: string(path),
            credit: int,
            phone: num,
            QQ: num,
            registerTime: Date
        }
    }
